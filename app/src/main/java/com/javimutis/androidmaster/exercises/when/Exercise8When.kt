package com.javimutis.androidmaster.exercises.`when`


/*ExplicaciÃ³n del cÃ³digo:
Se crean tres valores en main() para probar la funciÃ³n.

1 (lunes), 7 (domingo) y 9 (nÃºmero invÃ¡lido).

Se usa when en daysOfTheWeek() para asignar el nombre del dÃ­a.

Compara day con valores del 1 al 7 y devuelve el nombre correspondiente.

Si el nÃºmero no estÃ¡ en el rango, muestra "NÃºmero invÃ¡lido".

Se imprime el resultado.

Ejemplo:

kotlin
Copiar
Editar
daysOfTheWeek(1)  // lunes
daysOfTheWeek(7)  // domingo
daysOfTheWeek(9)  // NÃºmero invÃ¡lido*/


/**
 * ğŸ“Œ DÃ­as de la semana
 *
 * Este programa recibe un nÃºmero del 1 al 7 y devuelve el nombre del dÃ­a correspondiente.
 * Si el nÃºmero no estÃ¡ en el rango vÃ¡lido, muestra "NÃºmero invÃ¡lido".
 *
 * Ejemplos:
 *  - 1 â†’ "lunes"
 *  - 5 â†’ "viernes"
 *  - 7 â†’ "domingo"
 *  - 9 â†’ "NÃºmero invÃ¡lido" (porque no estÃ¡ en el rango de 1 a 7)
 */

fun main() {
    // ğŸ“Œ Se definen tres valores para probar el programa.
    val monday = 1     // Representa el lunes
    val sunday = 7     // Representa el domingo
    val invalid = 9    // Valor fuera del rango vÃ¡lido

    // ğŸ“Œ Se llama a la funciÃ³n `daysOfTheWeek()` para determinar el dÃ­a correspondiente
    daysOfTheWeek(monday)  // DeberÃ­a imprimir "lunes"
    daysOfTheWeek(sunday)  // DeberÃ­a imprimir "domingo"
    daysOfTheWeek(invalid) // DeberÃ­a imprimir "NÃºmero invÃ¡lido"
}

/**
 * ğŸ“Œ FunciÃ³n que recibe un nÃºmero y devuelve el dÃ­a de la semana correspondiente.
 * @param day NÃºmero del 1 al 7 que representa un dÃ­a de la semana.
 */
fun daysOfTheWeek(day: Int) {
    // ğŸ“Œ Se usa `when` para comparar el valor de `day` con cada posible dÃ­a de la semana.
    val dayName = when (day) {
        1 -> "lunes"      // Si `day` es 1, el dÃ­a es "lunes"
        2 -> "martes"     // Si `day` es 2, el dÃ­a es "martes"
        3 -> "miÃ©rcoles"  // Si `day` es 3, el dÃ­a es "miÃ©rcoles"
        4 -> "jueves"     // Si `day` es 4, el dÃ­a es "jueves"
        5 -> "viernes"    // Si `day` es 5, el dÃ­a es "viernes"
        6 -> "sÃ¡bado"     // Si `day` es 6, el dÃ­a es "sÃ¡bado"
        7 -> "domingo"    // Si `day` es 7, el dÃ­a es "domingo"
        else -> "NÃºmero invÃ¡lido" // Si el nÃºmero no estÃ¡ entre 1 y 7, devuelve un error
    }

    // ğŸ“Œ Se imprime el nombre del dÃ­a correspondiente
    println(dayName)
}
