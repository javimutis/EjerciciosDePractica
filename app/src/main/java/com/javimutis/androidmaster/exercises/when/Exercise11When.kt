package com.javimutis.androidmaster.exercises.`when`
/*Explicaci칩n general del c칩digo:
Se define una data class Triangle(val a: Int, val b: Int, val c: Int)

Esta clase nos permite almacenar los tres lados del tri치ngulo de manera estructurada.

Se crea una lista de tri치ngulos en main() con diferentes valores para probar el programa.

Se incluyen ejemplos de tri치ngulos equil치teros, is칩sceles, escalenos y un caso inv치lido.

Se recorre la lista con forEach { printTriangleResult(it) }

Se env칤a cada tri치ngulo a la funci칩n printTriangleResult().

La funci칩n printTriangleResult(triangle: Triangle) analiza el tipo de tri치ngulo

Primero, verifica si los lados cumplen la regla de la desigualdad triangular (la suma de dos lados debe ser mayor al tercer lado).

Luego, usa when para clasificar el tri치ngulo seg칰n la cantidad de lados iguales.

Finalmente, imprime el resultado en la consola.

*/

/**
 * 游늷 Clasificaci칩n de tri치ngulos
 *
 * Este programa recibe los tres lados de un tri치ngulo y determina su tipo:
 *  - Equil치tero: todos los lados son iguales.
 *  - Is칩sceles: dos lados son iguales.
 *  - Escaleno: todos los lados son diferentes.
 *
 * Si los valores no pueden formar un tri치ngulo (no cumplen la desigualdad triangular),
 * se muestra un mensaje de error.
 */

/**
 * 游늷 Definimos una data class `Triangle` para representar un tri치ngulo con tres lados.
 */
data class Triangle(val a: Int, val b: Int, val c: Int)

fun main() {
    // Lista de tri치ngulos con diferentes combinaciones de lados
    val triangles = listOf(
        Triangle(3, 3, 3),  // Tri치ngulo equil치tero (todos los lados iguales)
        Triangle(3, 4, 4),  // Tri치ngulo is칩sceles (dos lados iguales)
        Triangle(3, 4, 5),  // Tri치ngulo escaleno (todos los lados diferentes)
        Triangle(1, 2, 10)  // No es un tri치ngulo v치lido (no cumple la desigualdad triangular)
    )

    // Iteramos sobre la lista y analizamos cada tri치ngulo con la funci칩n `printTriangleResult`
    triangles.forEach { printTriangleResult(it) }
}

/**
 * 游늷 Funci칩n que analiza el tipo de tri치ngulo y muestra el resultado en la consola.
 * @param triangle Un objeto de tipo `Triangle` con los tres lados.
 */
fun printTriangleResult(triangle: Triangle) {
    // Desestructuramos el objeto para obtener los lados `a`, `b` y `c`
    val (a, b, c) = triangle

    // Determinamos el tipo de tri치ngulo utilizando `when`
    val result = when {
        // Verificamos si los lados NO forman un tri치ngulo v치lido (Regla de la desigualdad triangular)
        a + b <= c || a + c <= b || b + c <= a -> "No es un tri치ngulo v치lido"

        // Si los tres lados son iguales, es un tri치ngulo equil치tero
        a == b && b == c -> "Es un tri치ngulo equil치tero"

        // Si al menos dos lados son iguales, es un tri치ngulo is칩sceles
        a == b || a == c || b == c -> "Es un tri치ngulo is칩sceles"

        // Si todos los lados son diferentes, es un tri치ngulo escaleno
        else -> "Es un tri치ngulo escaleno"
    }

    // Imprimimos el resultado en la consola
    println("Lados: $a, $b, $c -> $result")
}
